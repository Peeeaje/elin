{:log {;; cf. https://taoensso.github.io/timbre/taoensso.timbre.html#var-default-config
       :min-level :info}

 :server {:entrypoints {"nvim" elin.component.server.nvim/start-server
                        "vim" elin.component.server.vim/start-server}}

 :http-server {:port #empty-port []}

 :interceptor {:uses [elin.interceptor.autocmd/deinitialize {}
                      elin.interceptor.autocmd/switch-connection {}
                      elin.interceptor.autocmd/ns-load {}
                      elin.interceptor.autocmd/skeleton {;; NOTE {lang {:src "skeleton for source" :test "skeleton for test"}}
                                                         :clojure {:src #resource "template/clojure_src_skeleton.mustache"
                                                                   :test #resource "template/clojure_test_skeleton.mustache"}}
                      elin.interceptor.autocmd/clj-kondo-analyzing {}
                      elin.interceptor.connect/connected {}
                      elin.interceptor.connect/raw-message-channel {}
                      elin.interceptor.connect/detect-clojure-port {}
                      elin.interceptor.connect.shadow-cljs/detect-shadow-cljs-port {}
                      elin.interceptor.connect/cleanup-jacked-in-process {}
                      elin.interceptor.debug/initialize-debugger {}
                      elin.interceptor.debug/process-debugger {}
                      elin.interceptor.handler/handling-error {}
                      elin.interceptor.nrepl/nrepl-output {}
                      elin.interceptor.nrepl/eval-ns {}
                      elin.interceptor.nrepl/normalize-path {}
                      elin.interceptor.nrepl/progress {}
                      elin.interceptor.output/print-output {}
                      elin.interceptor.test/done-test {}]

               :config-map {elin.interceptor.evaluate/set-eval-result-to-virtual-text {:format "=> {{{result}}}"
                                                                                       :highlight "DiffText"
                                                                                       :align "after"
                                                                                       :close-after 3000}}

               :preset {:evaluation {:includes [elin.interceptor.evaluate/output-eval-result-to-cmdline
                                                elin.interceptor.evaluate/set-eval-result-to-virtual-text
                                                elin.interceptor.evaluate/unwrap-comment-form
                                                elin.interceptor.evaluate/yank-eval-result]}
                        :code-change {:includes [elin.interceptor.code-change/show-code-changed-result]}}}

 :handler {:uses [elin.handler.callback/callback {}
                  elin.handler.complete/complete {:log {:min-level :error}}
                  elin.handler.connect/connect {}
                  elin.handler.connect/disconnect {}
                  elin.handler.connect/instant {}
                  elin.handler.connect/jack-in {}
                  elin.handler.connect/switch {}
                  elin.handler.debug/nrepl-request {}
                  elin.handler.evaluate/evaluate {:interceptor {:includes [elin.interceptor.evaluate/output-eval-result-to-cmdline]}}
                  elin.handler.evaluate/evaluate-at-mark {:interceptor #ref [:interceptor :preset :evaluation]}
                  elin.handler.evaluate/evaluate-current-buffer {:interceptor {:includes [elin.interceptor.nrepl/output-result-to-cmdline]}}
                  elin.handler.evaluate/evaluate-current-expr {:interceptor #ref [:interceptor :preset :evaluation]}
                  elin.handler.evaluate/evaluate-current-list {:interceptor #ref [:interceptor :preset :evaluation]}
                  elin.handler.evaluate/evaluate-current-top-list {:interceptor #ref [:interceptor :preset :evaluation]}
                  elin.handler.evaluate/evaluate-namespace-form {:interceptor {:includes [elin.interceptor.evaluate/output-eval-result-to-cmdline]}}
                  elin.handler.evaluate/expand-1-current-list {:interceptor {:uses [elin.interceptor.handler/append-result-to-info-buffer {:show-temporarily? true}]}}
                  elin.handler.evaluate/interrupt {:interceptor {:includes [elin.interceptor.nrepl/output-result-to-cmdline]}}
                  elin.handler.evaluate/print-last-result {}
                  elin.handler.evaluate/reload {:interceptor {:includes [elin.interceptor.nrepl/output-result-to-cmdline]}}
                  elin.handler.evaluate/reload-all {:interceptor {:includes [elin.interceptor.nrepl/output-result-to-cmdline]}}
                  elin.handler.evaluate/undef {:interceptor {:includes [elin.interceptor.nrepl/output-result-to-cmdline]}}
                  elin.handler.evaluate/undef-all {:interceptor {:includes [elin.interceptor.nrepl/output-result-to-cmdline]}}
                  elin.handler.internal/error {}
                  elin.handler.internal/healthcheck {:log {:min-level :error}}
                  elin.handler.internal/initialize {}
                  elin.handler.internal/intercept {}
                  elin.handler.internal/status {:log {:min-level :error}
                                                :label {:disconnected ""
                                                        :connected "üçè"}}
                  elin.handler.lookup/lookup {:format {:clojure #resource "template/lookup_clojure.mustache"
                                                       :java #resource "template/lookup_java.mustache"}
                                              :interceptor {:uses [elin.interceptor.handler/show-result-as-popup {:filetype "help" :moved "current-line"}]}}
                  elin.handler.lookup/show-source {:interceptor {:includes [elin.interceptor.handler/show-result-as-popup]}}
                  elin.handler.lookup/show-clojuredocs {:export-edn-url "https://github.com/clojure-emacs/clojuredocs-export-edn/raw/master/exports/export.compact.edn"
                                                        :format #resource "template/clojuredocs.mustache"
                                                        :interceptor {:uses [elin.interceptor.handler/append-result-to-info-buffer {:show-temporarily? true}]}}
                  elin.handler.namespace/add-libspec {:favorites #include "favorite_aliases.edn"
                                                      :java-classes #include "java_classes.edn"
                                                      :interceptor #ref [:interceptor :preset :code-change]}
                  elin.handler.namespace/add-missing-libspec {:favorites #include "favorite_aliases.edn"
                                                              :java-classes #include "java_classes.edn"
                                                              :interceptor #ref [:interceptor :preset :code-change]}
                  elin.handler.navigate/cycle-source-and-test {:interceptor {:includes [elin.interceptor.handler/jump-to-file]}}
                  elin.handler.navigate/jump-to-definition {:interceptor {:includes [elin.interceptor.handler/jump-to-file]}}
                  elin.handler.navigate/references {:interceptor {:includes [elin.interceptor.handler/jump-to-file]}}
                  elin.handler.navigate/local-references {:interceptor {:includes [elin.interceptor.handler/jump-to-file]}}
                  elin.handler.test/rerun-last-failed-tests {}
                  elin.handler.test/rerun-last-tests {}
                  elin.handler.test/run-test-under-cursor {}
                  elin.handler.test/run-tests-in-ns {}]

           :initialize {:export {"g:elin_http_server_port" #ref [:http-server :port]}}}

 :clj-kondo {:command "clj-kondo"
             :config {:output {:analysis {:protocol-impls true
                                          :arglists true}}}}}
