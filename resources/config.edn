{:log {;; cf. https://taoensso.github.io/timbre/taoensso.timbre.html#var-default-config
       :min-level :info}

 :http-server {:port #empty-port []}

 :interceptor {:includes [elin.interceptor.autocmd/deinitialize-interceptor
                          elin.interceptor.autocmd/ns-create-interceptor
                          elin.interceptor.autocmd/skeleton-interceptor
                          elin.interceptor.autocmd/clj-kondo-analyzing-interceptor
                          elin.interceptor.connect/connected-interceptor
                          elin.interceptor.connect/output-channel-interceptor
                          elin.interceptor.connect/port-auto-detecting-interceptor
                          elin.interceptor.handler/handling-error-interceptor
                          elin.interceptor.nrepl/eval-ns-interceptor
                          elin.interceptor.nrepl/normalize-path-interceptor
                          elin.interceptor.output/print-output-interceptor
                          elin.interceptor.test/done-test-interceptor]
               :preset {:evaluation {:includes [elin.interceptor.evaluate/output-eval-result-to-cmdline-interceptor
                                                elin.interceptor.evaluate/set-eval-result-to-virtual-text-interceptor
                                                elin.interceptor.evaluate/eval-in-comment-interceptor]}}}

 :handler {:includes [elin.handler.complete/complete
                      elin.handler.connect/connect
                      elin.handler.evaluate/evaluate
                      elin.handler.evaluate/evaluate-current-expr
                      elin.handler.evaluate/evaluate-current-list
                      elin.handler.evaluate/evaluate-current-top-list
                      elin.handler.evaluate/evaluate-namespace-form
                      elin.handler.namespace/add-namespace
                      elin.handler.namespace/add-namespace*
                      elin.handler.test/run-test-under-cursor
                      elin.handler.evaluate/load-current-file
                      elin.handler.internal/healthcheck
                      elin.handler.internal/error
                      elin.handler.internal/initialize
                      elin.handler.internal/intercept
                      elin.handler.internal/status
                      elin.handler.lookup/lookup
                      elin.handler.lookup/show-source
                      elin.handler.navigate/jump-to-definition
                      elin.handler.navigate/cycle-source-and-test]

           :config-map {elin.handler.internal/status {:label {:disconnected "üçè"
                                                              :connected "üçé"}}
                        elin.handler.evaluate/evaluate {:interceptor {:includes [elin.interceptor.evaluate/output-eval-result-to-cmdline-interceptor]}}
                        elin.handler.evaluate/evaluate-current-expr {:interceptor #ref [:interceptor :preset :evaluation]}
                        elin.handler.evaluate/evaluate-current-list {:interceptor #ref [:interceptor :preset :evaluation]}
                        elin.handler.evaluate/evaluate-current-top-list {:interceptor #ref [:interceptor :preset :evaluation]}
                        elin.handler.evaluate/evaluate-namespace-form {:interceptor {:includes [elin.interceptor.evaluate/output-eval-result-to-cmdline-interceptor]}}
                        elin.handler.evaluate/load-current-file {:interceptor {:includes [elin.interceptor.nrepl/output-load-file-result-to-cmdline-interceptor]}}}

           :initialize {:export {"g:elin_http_server_port" #ref [:http-server :port]}}}

 :clj-kondo {:config {:output {:analysis {:protocol-impls true
                                          :arglists true}}}}

 ;; cf. https://github.com/bbatsov/clojure-style-guide?tab=readme-ov-file#use-idiomatic-namespace-aliases
 :elin.function.core/most-used-namespace-alias
 {:favorites {;; Clojure
              cheshire.core json
              clj-http.client http
              clj-yaml.core yaml
              clojure.core.async async
              clojure.core.matrix mat
              clojure.data.csv csv
              clojure.data.xml xml
              clojure.datafy datafy
              clojure.edn edn
              clojure.java.io io
              clojure.java.shell sh
              clojure.pprint pp
              clojure.set set
              clojure.spec.alpha s
              clojure.spec.gen.alpha sgen
              clojure.spec.test.alpha stest
              clojure.string str
              clojure.tools.logging log
              clojure.walk walk
              clojure.zip zip
              hugsql.core sql
              java-time.api time
              next.jdbc jdbc
              ;; ClojureScript
              cljs.core.async async
              cljs.pprint pp
              cljs.reader reader
              cljs.spec.alpha s
              cljs.spec.gen.alpha sgen
              cljs.spec.test.alpha stest}}}
